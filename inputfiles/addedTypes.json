{
    "mixins": {
        "mixin": {
            "AbstractWorker": {
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "type": "ErrorEvent"
                        }
                    ]
                }
            },
            "DocumentAndElementEventHandlers": {
                "events": {
                    "event": [
                        {
                            "name": "copy",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "cut",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "paste",
                            "type": "ClipboardEvent"
                        }
                    ]
                }
            },
            "GlobalEventHandlers": {
                "events": {
                    "event": [
                        {
                            "name": "abort",
                            "type": "UIEvent"
                        },
                        {
                            "name": "auxclick",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "beforeinput",
                            "type": "InputEvent"
                        },
                        {
                            "name": "blur",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "click",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "compositionstart",
                            "type": "CompositionEvent"
                        },
                        {
                            "name": "compositionupdate",
                            "type": "CompositionEvent"
                        },
                        {
                            "name": "compositionend",
                            "type": "CompositionEvent"
                        },
                        {
                            "name": "drag",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragend",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragenter",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragleave",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragover",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragstart",
                            "type": "DragEvent"
                        },
                        {
                            "name": "drop",
                            "type": "DragEvent"
                        },
                        {
                            "name": "error",
                            "type": "ErrorEvent"
                        },
                        {
                            "name": "focus",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "focusin",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "focusout",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "formdata",
                            "type": "FormDataEvent"
                        },
                        {
                            "name": "keydown",
                            "type": "KeyboardEvent"
                        },
                        {
                            "name": "keypress",
                            "type": "KeyboardEvent"
                        },
                        {
                            "name": "keyup",
                            "type": "KeyboardEvent"
                        },
                        {
                            "name": "mousedown",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseenter",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseleave",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mousemove",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseout",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseover",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseup",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "progress",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "resize",
                            "type": "UIEvent"
                        },
                        {
                            "name": "wheel",
                            "type": "WheelEvent"
                        },
                        {
                            "name": "securitypolicyviolation",
                            "type": "SecurityPolicyViolationEvent"
                        },
                        {
                            "name": "dblclick",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "contextmenu",
                            "type": "MouseEvent"
                        }
                    ]
                }
            },
            "WindowEventHandlers": {
                "events": {
                    "event": [
                        {
                            "name": "beforeunload",
                            "type": "BeforeUnloadEvent"
                        },
                        {
                            "name": "message",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "messageerror",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "pagehide",
                            "type": "PageTransitionEvent"
                        },
                        {
                            "name": "pageshow",
                            "type": "PageTransitionEvent"
                        },
                        {
                            "name": "popstate",
                            "type": "PopStateEvent"
                        },
                        {
                            "name": "storage",
                            "type": "StorageEvent"
                        },
                        {
                            "name": "unhandledrejection",
                            "type": "PromiseRejectionEvent"
                        },
                        {
                            "name": "rejectionhandled",
                            "type": "PromiseRejectionEvent"
                        }
                    ]
                }
            }
        }
    },
    "callbackInterfaces": {
        "interface": {}
    },
    "enums": {
        "enum": {
            "ClientTypes": {
                "name": "ClientTypes",
                "value": [
                    "window",
                    "worker",
                    "sharedworker",
                    "all"
                ]
            },
            "RTCStatsIceCandidatePairState": {
                "value": [
                    "inprogress"
                ]
            }
        }
    },
    "interfaces": {
        "interface": {
            "BroadcastChannel": {
                "events": {
                    "event": [
                        {
                            "name": "message",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "messageerror",
                            "type": "MessageEvent"
                        }
                    ]
                }
            },
            "CompileError": {
                "name": "CompileError",
                "extends": "Error",
                "legacyNamespace": "WebAssembly"
            },
            "DeviceMotionEventAcceleration": {
                "noInterfaceObject": true
            },
            "DeviceMotionEventRotationRate": {
                "noInterfaceObject": true
            },
            "HTMLImageElement": {
                "name": "HTMLImageElement",
                "properties": {
                    "property": {
                        "decoding": {
                            "name": "decoding",
                            "overrideType": "\"async\" | \"sync\" | \"auto\""
                        }
                    }
                }
            },
            "HTMLTableDataCellElement": {
                "name": "HTMLTableDataCellElement",
                "extends": "HTMLTableCellElement",
                "noInterfaceObject": true,
                "comment": "@deprecated - prefer HTMLTableCellElement",
                "exposed": "Window"
            },
            "HTMLTableHeaderCellElement": {
                "name": "HTMLTableHeaderCellElement",
                "extends": "HTMLTableCellElement",
                "noInterfaceObject": true,
                "comment": "@deprecated - prefer HTMLTableCellElement",
                "exposed": "Window"
            },
            "HTMLDialogElement": {
                "name": "HTMLDialogElement",
                "noInterfaceObject": true,
                "comment": "@deprecated - this is not available in most browsers",
                "exposed": "Window"
            },
            "OffscreenCanvas": {
                "name": "OffscreenCanvas",
                "noInterfaceObject": true,
                "comment": "@deprecated - this is not available in most browsers",
                "exposed": "Worker"
            },
            "HTMLDocument": {
                "name": "HTMLDocument",
                "extends": "Document",
                "noInterfaceObject": true,
                "comment": "@deprecated - use Document",
                "exposed": "Window"
            },
            "HTMLMediaElement": {
                "events": {
                    "event": [
                        {
                            "name": "encrypted",
                            "type": "MediaEncryptedEvent"
                        }
                    ]
                }
            },
            "CSSStyleDeclaration": {
                "name": "CSSStyleDeclaration",
                "properties": {
                    "property": {
                        "imageOrientation": {
                            "deprecated": true
                        },
                        "wordWrap": {
                            "deprecated": true
                        }
                    }
                }
            },
            "ClientRect": {
                "name": "ClientRect",
                "exposed": "Window",
                "properties": {
                    "property": {
                        "bottom": {
                            "name": "bottom",
                            "overrideType": "number"
                        },
                        "top": {
                            "name": "top",
                            "overrideType": "number"
                        },
                        "left": {
                            "name": "left",
                            "overrideType": "number"
                        },
                        "right": {
                            "name": "right",
                            "overrideType": "number"
                        },
                        "height": {
                            "name": "height",
                            "overrideType": "number",
                            "readonly": true
                        },
                        "width": {
                            "name": "width",
                            "overrideType": "number",
                            "readonly": true
                        }
                    }
                }
            },
            "Window": {
                "name": "Window",
                "methods": {
                    "method": {
                        "captureEvents": {
                            "deprecated": true
                        }
                    }
                },
                "properties": {
                    "property": {
                        "HTMLDocument": {
                            "name": "HTMLDocument",
                            "type": "Document"
                        }
                    }
                },
                "overrideIndexSignatures": [
                    "[index: number]: Window"
                ],
                "events": {
                    "event": [
                        {
                            "name": "devicemotion",
                            "type": "DeviceMotionEvent"
                        },
                        {
                            "name": "deviceorientation",
                            "type": "DeviceOrientationEvent"
                        },
                        {
                            "name": "gamepadconnected",
                            "type": "GamepadEvent"
                        },
                        {
                            "name": "gamepaddisconnected",
                            "type": "GamepadEvent"
                        }
                    ]
                }
            },
            "URLSearchParams": {
                "name": "URLSearchParams",
                "constructor": {
                    "signature": {
                        "0": {
                            "param": [
                                {
                                    "name": "init",
                                    "additionalTypes": ["URLSearchParams"]
                                }
                            ]
                        }
                    }
                }
            },
            "URL": {
                "name": "URL",
                "methods": {
                    "method": {
                        "createObjectURL": {
                            "exposed": "Window Worker",
                            "overrideSignatures": [
                                "createObjectURL(object: any): string"
                            ]
                        }
                    }
                }
            },
            "NodeListOf": {
                "name": "NodeListOf",
                "typeParameters": [
                    {
                        "name": "TNode",
                        "extends": "Node"
                    }
                ],
                "exposed": "Window",
                "extends": "NodeList",
                "methods": {
                    "method": {
                        "item": {
                            "name": "item",
                            "overrideSignatures": [
                                "item(index: number): TNode"
                            ]
                        }
                    }
                },
                "noInterfaceObject": true,
                "overrideIndexSignatures": [
                    "[index: number]: TNode"
                ],
                "iterator": {
                    "kind": "iterable",
                    "type": [
                        {
                            "overrideType": "TNode"
                        }
                    ]
                }
            },
            "HTMLCollectionOf": {
                "name": "HTMLCollectionOf",
                "typeParameters": [
                    {
                        "name": "T",
                        "extends": "Element"
                    }
                ],
                "exposed": "Window",
                "extends": "HTMLCollection",
                "methods": {
                    "method": {
                        "item": {
                            "getter": true,
                            "signature": [
                                {
                                    "nullable": true,
                                    "overrideType": "T",
                                    "param": [
                                        {
                                            "name": "index",
                                            "type": "unsigned long"
                                        }
                                    ]
                                }
                            ],
                            "specs": "html5",
                            "name": "item"
                        },
                        "namedItem": {
                            "name": "namedItem",
                            "overrideSignatures": [
                                "namedItem(name: string): T | null"
                            ]
                        }
                    }
                },
                "noInterfaceObject": true
            },
            "Element": {
                "name": "Element",
                "methods": {
                    "method": {
                        "getElementsByClassName": {
                            "name": "getElementsByClassName",
                            "signature": {
                                "0": {
                                    "overrideType": "HTMLCollectionOf<Element>"
                                }
                            }
                        },
                        "closest": {
                            "additionalSignatures": [
                                "closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null",
                                "closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null"
                            ],
                            "signature": {
                                "0": {
                                    "typeParameters": [
                                        {
                                            "name": "E",
                                            "extends": "Element",
                                            "default": "Element"
                                        }
                                    ],
                                    "overrideType": "E"
                                }
                            }
                        },
                        "insertAdjacentElement": {
                            "signature": {
                                "0": {
                                    "param": [
                                        {
                                            "name": "where",
                                            "type": "InsertPosition"
                                        }
                                    ]
                                }
                            }
                        },
                        "insertAdjacentHTML": {
                            "signature": {
                                "0": {
                                    "param": [
                                        {
                                            "name": "position",
                                            "type": "InsertPosition"
                                        }
                                    ]
                                }
                            }
                        },
                        "insertAdjacentText": {
                            "signature": {
                                "0": {
                                    "param": [
                                        {
                                            "name": "where",
                                            "type": "InsertPosition"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "properties": {
                    "property": {
                        "ownerDocument": {
                            "name": "ownerDocument",
                            "readonly": true,
                            "type": "Document"
                        }
                    }
                }
            },
            /*
              Keeping EventListener and EventListenerObject isn't the most elegant way to handle
              the event listeners, but we need to keep the EventListener as an extendable interface
              for libraries like angular.
            */
            "EventListener": {
                "name": "EventListener",
                "noInterfaceObject": true,
                "methods": {
                    "method": {
                        // This is a hack to add a call signature, but I think it's reasonable
                        // as it means we don't have to add a call signatures section to the
                        // emitter for this one case.
                        "callable": {
                            "overrideSignatures": [
                                "(evt: Event): void"
                            ]
                        }
                    }
                },

            },
            "EventListenerObject": {
                "name": "EventListenerObject",
                "noInterfaceObject": true,
                "methods": {
                    "method": {
                        "handleEvent": {
                            "overrideSignatures": [
                                "handleEvent(object: Event): void"
                            ]
                        }
                    }
                },
            },
            "Document": {
                "methods": {
                    "method": {
                        "createElementNS": {
                            "name": "createElementNS",
                            "additionalSignatures": [
                                "createElementNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", qualifiedName: string): HTMLElement",
                                "createElementNS<K extends keyof SVGElementTagNameMap>(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: K): SVGElementTagNameMap[K]",
                                "createElementNS(namespaceURI: \"http://www.w3.org/2000/svg\", qualifiedName: string): SVGElement",
                                "createElementNS(namespaceURI: string | null, qualifiedName: string, options?: ElementCreationOptions): Element"
                            ]
                        }
                    }
                },
                "properties": {
                    "property": {
                        "ownerDocument": {
                            "name": "ownerDocument",
                            "readonly": true,
                            "overrideType": "null"
                        }
                    }
                }
            },
            "Navigator": {
                "name": "Navigator",
                "properties": {
                    "property": {
                        "pointerEnabled": {
                            "name": "pointerEnabled",
                            "readonly": true,
                            "type": "boolean"
                        },
                        "doNotTrack": {
                            "name": "doNotTrack",
                            "readonly": true,
                            "nullable": true,
                            "type": "DOMString"
                        }
                    }
                }
            },
            "HTMLIFrameElement": {
                "name": "HTMLIFrameElement",
                "properties": {
                    "property": {
                        "referrerPolicy": {
                            "type": "ReferrerPolicy"
                        }
                    }
                }
            },
            "IDBDatabase": {
                "name": "IDBDatabase",
                "events": {
                    "event": [
                        {
                            "name": "versionchange",
                            "type": "IDBVersionChangeEvent"
                        }
                    ]
                }
            },
            "IDBOpenDBRequest": {
                "name": "IDBOpenDBRequest",
                "extends": "IDBRequest<IDBDatabase>",
                "events": {
                    "event": [
                        {
                            "name": "upgradeneeded",
                            "type": "IDBVersionChangeEvent"
                        }
                    ]
                }
            },
            "UIEvent": {
                "properties": {
                    "property": {
                        "which": {
                            "deprecated": true
                        }
                    }
                }
            },
            "SpeechRecognition": {
                "events": {
                    "event": [
                        {
                            "name": "result",
                            "type": "SpeechRecognitionEvent"
                        },
                        {
                            "name": "nomatch",
                            "type": "SpeechRecognitionEvent"
                        },
                        {
                            "name": "error",
                            "type": "SpeechRecognitionErrorEvent"
                        }
                    ]
                }
            },
            "SpeechSynthesisUtterance": {
                "events": {
                    "event": [
                        {
                            "name": "start",
                            "type": "SpeechSynthesisEvent"
                        },
                        {
                            "name": "end",
                            "type": "SpeechSynthesisEvent"
                        },
                        {
                            "name": "error",
                            "type": "SpeechSynthesisErrorEvent"
                        },
                        {
                            "name": "pause",
                            "type": "SpeechSynthesisEvent"
                        },
                        {
                            "name": "resume",
                            "type": "SpeechSynthesisEvent"
                        },
                        {
                            "name": "mark",
                            "type": "SpeechSynthesisEvent"
                        },
                        {
                            "name": "boundary",
                            "type": "SpeechSynthesisEvent"
                        }
                    ]
                }
            },
            "StyleMedia": {
                "name": "StyleMedia",
                "exposed": "Window",
                "properties": {
                    "property": {
                        "type": {
                            "name": "type",
                            "overrideType": "string"
                        }
                    }
                },
                "methods": {
                    "method": {
                        "matchMedium": {
                            "name": "matchMedium",
                            "overrideSignatures": [
                                "matchMedium(mediaquery: string): boolean"
                            ]
                        }
                    }
                }
            },
            "SVGElement": {
                "implements": [
                    "GlobalEventHandlers",
                    "DocumentAndElementEventHandlers"
                ]
            },
            "Text": {
                "name": "Text",
                "properties": {
                    "property": {
                        "assignedSlot": {
                            "name": "assignedSlot",
                            "readonly": true,
                            "overrideType": "HTMLSlotElement | null"
                        }
                    }
                }
            },
            "TextTrackList": {
                "events": {
                    "event": [
                        {
                            "name": "addtrack",
                            "type": "TrackEvent"
                        },
                        {
                            "name": "removetrack",
                            "type": "TrackEvent"
                        }
                    ]
                }
            },
            "DOMMatrixReadOnly": {
                "methods": {
                    "method": {
                        "scaleNonUniform": {
                            "deprecated": true
                        }
                    }
                }
            },
            "EventSource": {
                "events": {
                    "event": [
                        {
                            "name": "message",
                            "type": "MessageEvent"
                        }
                    ]
                }
            },
            "HTMLBodyElement": {
                "properties": {
                    "property": {
                        "onorientationchange": {
                            "deprecated": true
                        }
                    }
                }
            },
            "HTMLElement": {
                "implements": [
                    "ElementCSSInlineStyle"
                ]
            },
            "HTMLInputElement": {
                "properties": {
                    "property": {
                        "labels": {
                            "overrideType": "NodeListOf<HTMLLabelElement>"
                        }
                    }
                }
            },
            "HTMLLinkElement": {
                "properties": {
                    "property": {
                        "charset": {
                            "deprecated": true
                        },
                        "rev": {
                            "deprecated": true
                        },
                        "target": {
                            "deprecated": true
                        }
                    }
                }
            },
            "HTMLPreElement": {
                "element": [
                    {
                        "name": "listing",
                        "deprecated": true
                    },
                    {
                        "name": "xmp",
                        "deprecated": true
                    }
                ]
            },
            "KHR_parallel_shader_compile": {
                "overrideExposed": "Window Worker"
            },
            "OVR_multiview2": {
                "overrideExposed": "Window Worker"
            },
            "RTCDTMFSender": {
                "events": {
                    "event": [
                        {
                            "name": "tonechange",
                            "type": "RTCDTMFToneChangeEvent"
                        }
                    ]
                }
            },
            "RuntimeError": {
                "name": "RuntimeError",
                "extends": "Error",
                "legacyNamespace": "WebAssembly"
            },
            "SVGCursorElement": {
                "name": "SVGCursorElement",
                "extends": "SVGElement",
                "exposed": "Window",
                "properties": {
                    "property": {
                        "x": {
                            "name": "x",
                            "readonly": true,
                            "type": "SVGAnimatedLength"
                        },
                        "y": {
                            "name": "y",
                            "readonly": true,
                            "type": "SVGAnimatedLength"
                        }
                    }
                }
            },
            "SVGStyleElement": {
                "properties": {
                    "property": {
                        "disabled": {
                            "name": "disabled",
                            "type": "boolean"
                        }
                    }
                }
            },
            "LinkError": {
                "name": "LinkError",
                "extends": "Error",
                "legacyNamespace": "WebAssembly"
            },
            "MediaRecorder": {
                "events": {
                    "event": [
                        {
                            "name": "dataavailable",
                            "type": "BlobEvent"
                        }
                    ]
                }
            },
            "MediaStream": {
                "events": {
                    "event": [
                        {
                            "name": "addtrack",
                            "type": "MediaStreamTrackEvent"
                        },
                        {
                            "name": "removetrack",
                            "type": "MediaStreamTrackEvent"
                        }
                    ]
                }
            },
            "OverconstrainedError": {
                "name": "OverconstrainedError",
                "extends": "Error"
            },
            "ProgressEvent": {
                "typeParameters": [
                    {
                        "name": "T",
                        "extends": "EventTarget",
                        "default": "EventTarget"
                    }
                ],
                "properties": {
                    "property": {
                        "target": {
                            "name": "target",
                            "readonly": true,
                            "nullable": true,
                            "overrideType": "T"
                        }
                    }
                }
            },
            "SharedWorkerGlobalScope": {
                "events": {
                    "event": [
                        {
                            "name": "connect",
                            "type": "MessageEvent"
                        }
                    ]
                }
            },
            "Attr": {
                "name": "Attr",
                "properties": {
                    "property": {
                        "ownerDocument": {
                            "name": "ownerDocument",
                            "readonly": true,
                            "type": "Document"
                        }
                    }
                }
            },
            "CharacterData": {
                "name": "CharacterData",
                "properties": {
                    "property": {
                        "ownerDocument": {
                            "name": "ownerDocument",
                            "readonly": true,
                            "type": "Document"
                        }
                    }
                }
            },
            "DocumentType": {
                "name": "DocumentType",
                "properties": {
                    "property": {
                        "ownerDocument": {
                            "name": "ownerDocument",
                            "readonly": true,
                            "type": "Document"
                        }
                    }
                }
            },
            "ProcessingInstruction": {
                "name": "ProcessingInstruction",
                "properties": {
                    "property": {
                        "ownerDocument": {
                            "name": "ownerDocument",
                            "readonly": true,
                            "type": "Document"
                        }
                    }
                }
            },
            "WebSocket": {
                "events": {
                    "event": [
                        {
                            "name": "close",
                            "type": "CloseEvent"
                        }
                    ]
                }
            },
            "WorkerGlobalScope": {
                "events": {
                    "event": [
                        {
                            "name": "rejectionhandled",
                            "type": "PromiseRejectionEvent"
                        },
                        {
                            "name": "unhandledrejection",
                            "type": "PromiseRejectionEvent"
                        }
                    ]
                }
            }
        }
    },
    "dictionaries": {
        "dictionary": {
            "ImportMeta": {
                "name": "ImportMeta",
                "members": {
                    "member": {
                        "url": {
                            "name": "url",
                            "type": "DOMString",
                            "required": true
                        }
                    }
                }
            },
            "KeyboardEventInit": {
                "members": {
                    "member": {
                        "charCode": {
                            "deprecated": true
                        },
                        "keyCode": {
                            "deprecated": true
                        }
                    }
                }
            },
            "MemoryDescriptor": {
                "members": {
                    "member": {
                        "shared": {
                            "name": "shared",
                            "type": "boolean"
                        }
                    }
                }
            },
            "ReadableStreamDefaultReadDoneResult": {
                "name": "ReadableStreamDefaultReadDoneResult",
                "members": {
                    "member": {
                        "done": {
                            "name": "done",
                            "overrideType": "true",
                            "required": true
                        },
                        "value": {
                            "name": "value",
                            "overrideType": "undefined"
                        }
                    }
                }
            },
            "ReadableStreamDefaultReadValueResult": {
                "name": "ReadableStreamDefaultReadValueResult",
                "typeParameters": [
                    {
                        "name": "T"
                    }
                ],
                "members": {
                    "member": {
                        "done": {
                            "name": "done",
                            "overrideType": "false",
                            "required": true
                        },
                        "value": {
                            "name": "value",
                            "overrideType": "T",
                            "required": true
                        }
                    }
                }
            }
        }
    },
    "typedefs": {
        "typedef": [
            {
                "overrideType": "\"beforebegin\" | \"afterbegin\" | \"beforeend\" | \"afterend\"",
                "name": "InsertPosition"
            },
            {
                "additionalTypes": ["Headers"],
                "name": "HeadersInit"
            },
            {
                "overrideType": "number | string | Date | BufferSource | IDBValidKey[]",
                "name": "IDBValidKey"
            },
            {
                "type": {
                    "0": {
                        "type": "Algorithm"
                    }
                },
                "name": "AlgorithmIdentifier"
            },
            {
                "name": "MutationRecordType",
                "overrideType": "\"attributes\" | \"characterData\" | \"childList\""
            },
            {
                "name": "Transferable",
                "type": [
                    { "type": "ArrayBuffer" },
                    { "type": "MessagePort" },
                    { "type": "ImageBitmap" }
                ]
            },
            {
                "name": "WindowProxy",
                "type": "Window"
            },
            {
                "name": "ExportValue",
                "legacyNamespace": "WebAssembly",
                "overrideType": "Function | Global | Memory | Table"
            },
            {
                "name": "Exports",
                "legacyNamespace": "WebAssembly",
                "type": "record",
                "subtype": [
                    {
                        "type": "DOMString"
                    },
                    {
                        "type": "ExportValue"
                    }
                ]
            },
            {
                "name": "ImportValue",
                "legacyNamespace": "WebAssembly",
                "overrideType": "ExportValue | number"
            },
            {
                "name": "ModuleImports",
                "legacyNamespace": "WebAssembly",
                "type": "record",
                "subtype": [
                    {
                        "type": "DOMString"
                    },
                    {
                        "type": "ImportValue"
                    }
                ]
            },
            {
                "name": "Imports",
                "legacyNamespace": "WebAssembly",
                "type": "record",
                "subtype": [
                    {
                        "type": "DOMString"
                    },
                    {
                        "type": "ModuleImports"
                    }
                ]
            },
            {
                "name": "ReadableStreamDefaultReadResult",
                "typeParameters": [
                    {
                        "name": "T"
                    }
                ],
                "type": [
                    {
                        "type": "ReadableStreamDefaultReadValueResult"
                    },
                    {
                        "type": "ReadableStreamDefaultReadDoneResult"
                    }
                ],
                "overrideType": "ReadableStreamDefaultReadValueResult<T> | ReadableStreamDefaultReadDoneResult"
            },
            {
                "name": "ReadableStreamReader",
                "typeParameters": [
                    {
                        "name": "T"
                    }
                ],
                "type": [
                    {
                        "type": "ReadableStreamDefaultReader"
                    }
                ],
                "overrideType": "ReadableStreamDefaultReader<T>"
            },
            {
                "name": "EventListenerOrEventListenerObject",
                "type": [
                    { "type": "_EventListener" },
                    { "type": "EventListenerObject" }
                ]
            }
        ]
    }
}
